= slide 'Релацонна база от данни' do
  img src="images/erd.png"

= slide 'SQL' do
  p Език за работа с данни.
  p Той позволява:
  ul
    li.action Извличане на данни(Select)
    li.action Вмъкване на данни(Insert)
    li.action Редактиране на данни(Update)
    li.action Изтриване на данни(Delete)
    li.action Създавне на таблици, вюта, бази и други (Create)

= slide 'Преди всичко UTF-8' do
  example:
    [lang:sql]
    SET NAMES utf8;

= slide 'Извличане на данни(Select)' do
  img src="images/erd.png"

  example:
    [lang:sql]
    SELECT * FROM MAJORS

    SELECT NAME, ACADEMIC_DEGREE FROM MAJORS

    SELECT * FROM MAJORS WHERE NAME = 'Software Engineering'

    SELECT * FROM MAJORS WHERE START_YEAR = 2011

= slide 'Вмъкване на данни(Insert)' do
  img src="images/erd.png"

  example:
    [lang:sql]
    INSERT INTO MAJORS (NAME, ACADEMIC_DEGREE) VALUES ('Software Eginnering', 'bachelor')

= slide 'JOIN заявки' do
  img src="images/erd.png"

  example:
    [lang:sql]
    SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate
    FROM Orders
    INNER JOIN Customers
    ON Orders.CustomerID=Customers.CustomerID;

= slide 'Типове JOIN' do
  img src="images/join-types.jpg"

= slide 'MySQL' do
  p Създадена от Шведска компания през 1994
  p През 2008 купена от Sun
  p През 2010 Oracle закупува Sun
  p Втората най-популярна база в света според DB-Engines

= slide 'sql2o' do
  p Java библиотека за изпълняване на SQL върху база
  p Може автоматично да създава обекти от резултатите от търсенето
  p Не е ORM

= slide 'sql2o Свързване към база' do
  example:
    [lang:java]
    String DB_URL = "jdbc:mysql://node5.codenvy.io:34189/www";
    String USER = "www";
    String PASS = "password";

    Sql2o sql2o = new Sql2o(DB_URL, USER, PASS);

= slide 'sql2o Select' do
  example:
    [lang:java]
    get("/electives/:id", (request, response) -> {
        int id = Integer.parseInt(request.params(":id"));
        String sql = "SELECT title, description, lecturer " +
                     "FROM electives " +
                     "WHERE id = :id;";
        try(Connection con = sql2o.open()) {
            Elective elective = con.createQuery(sql)
                                   .addParameter("id", id)
                                   .executeAndFetchFirst(Elective.class);
            return elective.toHTML();
        } catch (Exception e) {
            return String.format("Couldn't retrieve elective with id %d", id);
        }
    });

= slide 'Транзакции' do
  example:
    [lang:java]
    post("/electives", (request, response) -> {
        String title = request.queryParams("title");
        String description = request.queryParams("description");
        String lecturer = request.queryParams("lecturer");
        String query = "INSERT INTO electives (title, description, lecturer) VALUES " +
                                             "(:title, :description, :lecturer)";
        try (Connection con = sql2o.beginTransaction()) {
            sql2o.createQuery(query).addParameter("title", title)
                                    .addParameter("description", description)
                                    .addParameter("lecturer", lecturer)
                                    .executeUpdate();
            con.commit();
        } catch (Exception e) {
            return "Couldn't insert new elective.";
        }
        return "Success!";
    });

= slide 'NoSQL бази' do
  img src="images/nosql.png" width=550

=slide 'Демо проект' do
  ul
    li
      a href='https://goo.gl/4BsWio'
        h1 https://goo.gl/4BsWio
  p Без повече `mvn install`

= slide 'Задача 0' do
  p Добавете колона created_at на таблицата electives
  ul
    li Трябва по подразбиране да сочи момента на добавяне на реда
    li Можете ли да го направите без да променяте кода на приложението?

= slide 'Задача 1' do
  p Добавете функционалност за редактиране на избираема
  ul
    li Например: HTTP PUT на /electives/1 със съответните параметри трябва да промени избираемата с id 1

= slide 'Задача 2' do
  p Добавете функционалност за показване на избираеми по лектор
  ul
    li Например HTTP GET /electives?lecturer='Nikolay Bachiyski' трябва да върне агрегиран toHTML() на всички избираеми с лектор Николай Бачийски


