= slide 'Разширения' do
  p В PHP има разширения(Extensions), които надграждат основната функционалност на езика.
= slide 'PDO' do
  p PHP Data Objects (PDO) е едно такова разширение. 
= slide 'PDO' do
  p Дефинира лек, консистентен интерфейс за работа с различни СУБД.
= slide 'PDO' do
  p Предоставя абстрактен слой за работа с данни.
  p СУБД която използвате е без значение, защото интерфейса е еднакъв.
= slide 'PDO Поддръжка' do
  p MS SQL Server, DB2, MySQL, Oracle, PostgreSQL, SQLite....
= slide 'PDO Свързване' do
  example:
    <?php
      $user = 'username';
      $pass = 'password';
      $dbh = new PDO('mysql:host=localhost;dbname=test', $user, $pass);
      // use the connection here


      // and now we're done; close it
      $dbh = null;
    ?>
= slide 'PDO Свързване' do
  example:
    <?php
      $host   = "mysql4.000webhost.com";
      $db     = "a1073825_fmi";
      $user   = "a1073825_niki";
      $pass   = "*****************";

      $conn = new PDO("mysql:host=$host;dbname=$db",$user,$pass);
= slide 'PDO Извличане на Данни' do
  example:
    <?php
      $host   = "mysql4.000webhost.com";
      $db     = "a1073825_fmi";
      $user   = "a1073825_niki";
      $pass   = "*****************";

      $conn = new PDO("mysql:host=$host;dbname=$db",$user,$pass);

      $sql     = "SELECT * FROM MAJORS";
      $query   = $conn->query($sql) or die("failed!");
      while ($row = $query->fetch(PDO::FETCH_ASSOC)) {
        echo $row['NAME'];
      }
= slide 'PDO Извличане на Данни' do
  example:
    <?php
      ....
      echo '<ul>';
      while($row = $q->fetch(PDO::FETCH_ASSOC)){
        echo '<li>'.$row['NAME'].'</li>';
      }
      echo '</ul>';
= slide 'Prepared statements' do
  p Заявка, записан в базата от данни и която може да се изпълнява многократно с подаване на различни данни.
= slide 'Prepared statements' do
  p Етапи:
  list:
    Заявката се съставя от приложението и се изпраща на базата от данни.
    Базата от данни парсва, компилира, оптимизира заявката и я запазва.
    В следващ момент, приложението подава данни към тази заявка и тя се изпълнява, като това се повтаря многократно.
= slide 'Prepared statements' do
  p Избягва се постоянното парсване, компилиране и оптимизиране.
  p Повишава се бързодействието.
  p Повишава се сигурността.
= slide 'Prepared statements' do
  example:
    <?php
      $stmt = $conn->prepare("
          INSERT INTO MAJORS (NAME, ACADEMIC_DEGREE) 
          VALUES (:name, :academic_degree)");
      $stmt->bindParam(':name', $name);
      $stmt->bindParam(':academic_degree', $academic_degree);

      $name = 'Biology';
      $academic_degree = 'bachelor';
      $stmt->execute();

      $name = 'Management';
      $academic_degree = 'master';
      $stmt->execute();
    ?>
= slide 'Prepared statements' do
  example:
    <?php
      echo '<ul>';
      $stmt = $conn->prepare("SELECT * FROM MAJORS where ACADEMIC_DEGREE = ?");
      if ($stmt->execute(array('bachelor'))) {
        while ($row = $stmt->fetch()) {
          echo '<li>'.$row["NAME"].'</li>';
        }
      }
      echo '</ul>';
    ?>
= slide 'Транзакции' do
  example:
    <?php
      $conn->beginTransaction();

      $sql = 'INSERT INTO fruit (name, calories) VALUES (?, ?)';
      $sth = $conn->prepare($sql);

      foreach ($fruits as $fruit) {
          $sth->execute(array(
              $fruit->name,
              $fruit->calories,
          ));
      }
      $dbh->commit();
    ?>
= slide 'Транзакции' do
  example:
    <?php
      $conn->beginTransaction();

      $sth = $conn->exec("DROP TABLE MAJORS");

      $conn->rollBack();
    ?>
= slide 'Работа с форми' do
  example:
    <?php
        $stmt = $conn->prepare("
            INSERT INTO MAJORS (NAME, ACADEMIC_DEGREE) 
            VALUES (:name, :academic_degree)");
        $stmt->bindParam(':name', $name);
        $stmt->bindParam(':academic_degree', $academic_degree);

        $name = $_POST['name'];
        $academic_degree = $_POST['academic_degree'];
        $stmt->execute();
      ?>